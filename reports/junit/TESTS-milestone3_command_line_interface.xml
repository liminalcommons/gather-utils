<testsuite name="milestone3_command_line_interface.Command Line Interface" tests="7" errors="0" failures="0" skipped="0" time="0.003537" timestamp="2025-03-12T21:43:53.227875" hostname="Victors-MBP.attlocal.net"><testcase classname="milestone3_command_line_interface.Command Line Interface" name="Set Up CLI Framework" status="passed" time="0.000662"><system-out>
<![CDATA[
@scenario.begin

  @REQ-3.1
  Scenario: Set Up CLI Framework
    Given I have the Portal Explorer CLI installed ... passed in 0.000s
    And I have configured my API key and space ID ... passed in 0.000s
    Given I need a command-line interface for the Portal Explorer ... passed in 0.000s
    When I set up the CLI framework with typer ... passed in 0.000s
    Then it should have a basic structure ... passed in 0.000s
    And it should be ready for implementing commands ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="milestone3_command_line_interface.Command Line Interface" name="List Maps in a Space" status="passed" time="0.00046"><system-out>
<![CDATA[
@scenario.begin

  @REQ-3.2
  Scenario: List Maps in a Space
    Given I have the Portal Explorer CLI installed ... passed in 0.000s
    And I have configured my API key and space ID ... passed in 0.000s
    Given I have access to a Gather.town space ... passed in 0.000s
    When I run the command "gather-explorer list-maps" ... passed in 0.000s
    Then it should display a list of all maps in the space ... passed in 0.000s
    And the output should be formatted with rich tables ... passed in 0.000s
    And it should include map IDs and names ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="milestone3_command_line_interface.Command Line Interface" name="Explore Portals in a Single Map" status="passed" time="0.000726"><system-out>
<![CDATA[
@scenario.begin

  @REQ-3.3
  Scenario: Explore Portals in a Single Map
    Given I have the Portal Explorer CLI installed ... passed in 0.000s
    And I have configured my API key and space ID ... passed in 0.000s
    Given I have access to a Gather.town space with portals ... passed in 0.000s
    When I run the command "gather-explorer explore --map-id <map_id>" ... passed in 0.000s
    Then it should analyze portals in the specified map ... passed in 0.000s
    And it should display the portal information ... passed in 0.000s
    And it should show connections to other maps ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="milestone3_command_line_interface.Command Line Interface" name="Explore Portals Across All Maps" status="passed" time="0.000538"><system-out>
<![CDATA[
@scenario.begin

  @REQ-3.3.1
  Scenario: Explore Portals Across All Maps
    Given I have the Portal Explorer CLI installed ... passed in 0.000s
    And I have configured my API key and space ID ... passed in 0.000s
    Given I have access to a Gather.town space with multiple maps ... passed in 0.000s
    When I run the command "gather-explorer explore --all-maps" ... passed in 0.000s
    Then it should analyze portals across all maps ... passed in 0.000s
    And it should display comprehensive portal information ... passed in 0.000s
    And it should show the connection graph between maps ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="milestone3_command_line_interface.Command Line Interface" name="Rich Output Formatting" status="passed" time="0.000347"><system-out>
<![CDATA[
@scenario.begin

  @REQ-3.4
  Scenario: Rich Output Formatting
    Given I have the Portal Explorer CLI installed ... passed in 0.000s
    And I have configured my API key and space ID ... passed in 0.000s
    Given I am using the Portal Explorer CLI ... passed in 0.000s
    When I run any command ... passed in 0.000s
    Then the output should be formatted with rich tables and styling ... passed in 0.000s
    And long-running operations should show progress indicators ... passed in 0.000s
    And the information should be presented in a user-friendly way ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="milestone3_command_line_interface.Command Line Interface" name="Handle API Errors Gracefully" status="passed" time="0.00052"><system-out>
<![CDATA[
@scenario.begin

  @REQ-3.5
  Scenario: Handle API Errors Gracefully
    Given I have the Portal Explorer CLI installed ... passed in 0.000s
    And I have configured my API key and space ID ... passed in 0.000s
    Given I have incorrect API credentials ... passed in 0.000s
    When I run any command that requires API access ... passed in 0.000s
    Then it should display a user-friendly error message ... passed in 0.000s
    And it should provide guidance on how to fix the issue ... passed in 0.000s
    And it should exit with an appropriate error code ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase><testcase classname="milestone3_command_line_interface.Command Line Interface" name="CLI Entry Point Registration" status="passed" time="0.000284"><system-out>
<![CDATA[
@scenario.begin

  @REQ-3.6
  Scenario: CLI Entry Point Registration
    Given I have the Portal Explorer CLI installed ... passed in 0.000s
    And I have configured my API key and space ID ... passed in 0.000s
    Given I have installed the package ... passed in 0.000s
    When I run the command "gather-explorer" without arguments ... passed in 0.000s
    Then it should display help information ... passed in 0.000s
    And all available commands should be listed ... passed in 0.000s
    And the CLI should be accessible as a system command ... passed in 0.000s

@scenario.end
--------------------------------------------------------------------------------
]]>
</system-out></testcase></testsuite>